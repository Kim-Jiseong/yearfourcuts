[{"C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\api\\auth\\[...nextauth].js":"1","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\api\\hello.ts":"2","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\frame\\detailFrame.tsx":"3","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\frame\\showFrame.tsx":"4","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\frame\\type1.tsx":"5","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\header.tsx":"6","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\share.tsx":"7","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\upload\\page1.tsx":"8","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\upload\\page2.tsx":"9","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\upload\\page3.tsx":"10","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\index.tsx":"11","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\login.tsx":"12","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\signup.tsx":"13","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\[pid]\\index.tsx":"14","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\[pid]\\upload.tsx":"15","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\_app.tsx":"16","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\_document.tsx":"17"},{"size":1146,"mtime":1672178793451,"results":"18","hashOfConfig":"19"},{"size":307,"mtime":1671432461705,"results":"20","hashOfConfig":"19"},{"size":11027,"mtime":1672301045085,"results":"21","hashOfConfig":"19"},{"size":4348,"mtime":1672029409954,"results":"22","hashOfConfig":"19"},{"size":10444,"mtime":1672214669586,"results":"23","hashOfConfig":"19"},{"size":2181,"mtime":1671930350305,"results":"24","hashOfConfig":"19"},{"size":1330,"mtime":1672022204777,"results":"25","hashOfConfig":"19"},{"size":2560,"mtime":1672242095569,"results":"26","hashOfConfig":"19"},{"size":2851,"mtime":1672241576846,"results":"27","hashOfConfig":"19"},{"size":4189,"mtime":1672241259284,"results":"28","hashOfConfig":"19"},{"size":3215,"mtime":1672223833375,"results":"29","hashOfConfig":"19"},{"size":843,"mtime":1671945530837,"results":"30","hashOfConfig":"19"},{"size":4068,"mtime":1672228942409,"results":"31","hashOfConfig":"19"},{"size":13505,"mtime":1672124642140,"results":"32","hashOfConfig":"19"},{"size":1443,"mtime":1671953209801,"results":"33","hashOfConfig":"19"},{"size":2095,"mtime":1672222623375,"results":"34","hashOfConfig":"19"},{"size":2272,"mtime":1672126762624,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1607nof",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\api\\auth\\[...nextauth].js",[],[],"C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\api\\hello.ts",[],[],"C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\frame\\detailFrame.tsx",["93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124"],[],"import { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport * as S from \"styles/components/frame1/style\";\r\nimport * as T from \"styles/components/frame2/style\";\r\nimport * as M from \"styles/components/frame3/style\";\r\nimport Router, { useRouter } from \"next/router\";\r\nimport Blank from \"public/img/blank.png\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useSession } from \"next-auth/react\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nimport { frameAtom, colorAtom, pageAtom, modalAtom } from \"atoms/atom\";\r\nimport axios from \"axios\";\r\nexport default function DetailFrame(props: any) {\r\n  const S3 = process.env.NEXT_PUBLIC_S3_URL;\r\n  const router = useRouter();\r\n  const { data: session, status } = useSession<any>({ required: false });\r\n  const [modal, setModal] = useState(false);\r\n  const [masterModal, setMasterModal] = useRecoilState(modalAtom);\r\n  const [master, setMaster] = useState<any>(props.master);\r\n  const [Bg, setBg] = useState<any>(props.color);\r\n  const [frame, setFrame] = useState<any>(props.frame);\r\n  const [file1, setFile1] = useState<any>(\r\n    process.env.NEXT_PUBLIC_S3_URL + props.file1\r\n  );\r\n  const [file2, setFile2] = useState<any>(\r\n    process.env.NEXT_PUBLIC_S3_URL + props.file2\r\n  );\r\n  const [file3, setFile3] = useState<any>(\r\n    process.env.NEXT_PUBLIC_S3_URL + props.file3\r\n  );\r\n  const [file4, setFile4] = useState<any>(\r\n    process.env.NEXT_PUBLIC_S3_URL + props.file4\r\n  );\r\n  const [letter, setLetter] = useState<any>(props.letter);\r\n  const [author, setAuthor] = useState<any>(props.author);\r\n  const [pk, setPk] = useState<any>(props.id);\r\n  const imgContainer = useRef<any>(null);\r\n  const onHtmlToPng = () => {\r\n    console.log(\"onCapture\");\r\n    html2canvas(imgContainer.current, {\r\n      allowTaint: true,\r\n      useCORS: false,\r\n      // foreignObjectRendering: true,\r\n    }).then((canvas) => {\r\n      console.log(\r\n        \"canvas\",\r\n        canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")\r\n      );\r\n      onSaveAs(canvas.toDataURL(\"image/png\"), \"4cuts4memories.png\");\r\n    });\r\n    // const onCapture = () => {};\r\n\r\n    const onSaveAs = (uri: string, filename: any) => {\r\n      console.log(\"onSaveAs\");\r\n      var link = document.createElement(\"a\");\r\n      document.body.appendChild(link);\r\n      link.href = uri;\r\n      link.download = filename;\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    };\r\n  };\r\n\r\n  const deletePost = () => {\r\n    axios\r\n      .post(process.env.NEXT_PUBLIC_BASE_URL + \"posts/deletePost\", {\r\n        post_pk: pk,\r\n      })\r\n      .then(function (res) {\r\n        console.log(res);\r\n        alert(\"삭제되었습니다\");\r\n        Router.reload();\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"사진 삭제에 실패했습니다. 다시 시도해주세요.\");\r\n        console.log(error);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      {frame === 1 && (\r\n        <div>\r\n          <S.Container ref={imgContainer} color={Bg}>\r\n            <S.PhotoContainer>\r\n              <S.PhotoWrapper>\r\n                <img\r\n                  crossOrigin=\"anonymous\"\r\n                  src={file1 ? file1 : Blank.src}\r\n                ></img>\r\n              </S.PhotoWrapper>\r\n              <S.PhotoWrapper>\r\n                <img\r\n                  crossOrigin=\"anonymous\"\r\n                  src={file2 ? file2 : Blank.src}\r\n                ></img>\r\n              </S.PhotoWrapper>\r\n              <S.PhotoWrapper>\r\n                <img\r\n                  crossOrigin=\"anonymous\"\r\n                  src={file3 ? file3 : Blank.src}\r\n                ></img>\r\n              </S.PhotoWrapper>\r\n              <S.PhotoWrapper>\r\n                <img\r\n                  crossOrigin=\"anonymous\"\r\n                  src={file4 ? file4 : Blank.src}\r\n                ></img>\r\n              </S.PhotoWrapper>\r\n            </S.PhotoContainer>\r\n\r\n            <S.PhotoContainer2>\r\n              <S.PhotoWrapperGrey>\r\n                <img\r\n                  crossOrigin=\"anonymous\"\r\n                  src={file1 ? file1 : Blank.src}\r\n                ></img>\r\n              </S.PhotoWrapperGrey>\r\n              <S.PhotoWrapperGrey>\r\n                <img\r\n                  crossOrigin=\"anonymous\"\r\n                  src={file2 ? file2 : Blank.src}\r\n                ></img>\r\n              </S.PhotoWrapperGrey>\r\n              <S.PhotoWrapperGrey>\r\n                <img\r\n                  crossOrigin=\"anonymous\"\r\n                  src={file3 ? file3 : Blank.src}\r\n                ></img>\r\n              </S.PhotoWrapperGrey>\r\n              <S.PhotoWrapperGrey>\r\n                <img\r\n                  crossOrigin=\"anonymous\"\r\n                  src={file4 ? file4 : Blank.src}\r\n                ></img>\r\n              </S.PhotoWrapperGrey>\r\n            </S.PhotoContainer2>\r\n            {master === session?.user?.email && (\r\n              <S.BtnWrapper>\r\n                <S.MailIcon\r\n                  onClick={() => {\r\n                    const result = confirm(\"이 사진을 삭제하시겠습니까?\");\r\n                    if (result === true) {\r\n                      deletePost();\r\n                    } else {\r\n                      return;\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className=\"bi bi-trash\"></i>\r\n                </S.MailIcon>\r\n                <S.MailIcon\r\n                  onClick={() => {\r\n                    const result = confirm(\"이 사진을 다운로드하시겠습니까?\");\r\n                    if (result === true) {\r\n                      onHtmlToPng();\r\n                    } else {\r\n                      return;\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className=\"bi bi-download\"></i>\r\n                </S.MailIcon>\r\n\r\n                <S.MailIcon\r\n                  onClick={() => {\r\n                    setModal(true);\r\n                  }}\r\n                >\r\n                  <i className=\"bi bi-envelope-paper\"></i>\r\n                </S.MailIcon>\r\n              </S.BtnWrapper>\r\n            )}\r\n            {modal && (\r\n              <S.LetterModal\r\n                onClick={() => {\r\n                  setModal(false);\r\n                }}\r\n              >\r\n                <p>{letter}</p>\r\n                <p>{author}</p>\r\n              </S.LetterModal>\r\n            )}\r\n          </S.Container>\r\n        </div>\r\n      )}\r\n      {frame === 2 && (\r\n        <div>\r\n          <T.Container ref={imgContainer} color={Bg}>\r\n            <T.PhotoContainer>\r\n              <T.PhotoWrapper>\r\n                <img src={file1 ? file1 : Blank.src}></img>\r\n              </T.PhotoWrapper>\r\n              <T.PhotoWrapper>\r\n                <img src={file2 ? file2 : Blank.src}></img>\r\n              </T.PhotoWrapper>\r\n            </T.PhotoContainer>\r\n            <T.PhotoContainer2>\r\n              <T.PhotoWrapper>\r\n                <img src={file3 ? file3 : Blank.src}></img>\r\n              </T.PhotoWrapper>\r\n              <T.PhotoWrapper>\r\n                <img src={file4 ? file4 : Blank.src}></img>\r\n              </T.PhotoWrapper>\r\n            </T.PhotoContainer2>\r\n            {master === session?.user?.email && (\r\n              <S.BtnWrapper>\r\n                <S.MailIcon\r\n                  onClick={() => {\r\n                    const result = confirm(\"이 사진을 삭제하시겠습니까?\");\r\n                    if (result === true) {\r\n                      deletePost();\r\n                    } else {\r\n                      return;\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className=\"bi bi-trash\"></i>\r\n                </S.MailIcon>\r\n                <S.MailIcon\r\n                  onClick={() => {\r\n                    const result = confirm(\"이 사진을 다운로드하시겠습니까?\");\r\n                    if (result === true) {\r\n                      onHtmlToPng();\r\n                    } else {\r\n                      return;\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className=\"bi bi-download\"></i>\r\n                </S.MailIcon>\r\n                <S.MailIcon\r\n                  onClick={() => {\r\n                    setModal(true);\r\n                  }}\r\n                >\r\n                  <i className=\"bi bi-envelope-paper\"></i>\r\n                </S.MailIcon>\r\n              </S.BtnWrapper>\r\n            )}\r\n            {modal && (\r\n              <S.LetterModal\r\n                onClick={() => {\r\n                  setModal(false);\r\n                }}\r\n              >\r\n                <p>{letter}</p>\r\n                <p>{author}</p>\r\n              </S.LetterModal>\r\n            )}\r\n          </T.Container>\r\n        </div>\r\n      )}\r\n      {frame === 3 && (\r\n        <div>\r\n          <M.Container ref={imgContainer} color={Bg}>\r\n            <M.PhotoContainer>\r\n              <M.PhotoWrapper>\r\n                <img src={file1 ? file1 : Blank.src}></img>\r\n              </M.PhotoWrapper>\r\n              <M.PhotoWrapper>\r\n                <img src={file2 ? file2 : Blank.src}></img>\r\n              </M.PhotoWrapper>\r\n            </M.PhotoContainer>\r\n            <M.PhotoContainer2>\r\n              <M.PhotoWrapper>\r\n                <img src={file3 ? file3 : Blank.src}></img>\r\n              </M.PhotoWrapper>\r\n              <M.PhotoWrapper>\r\n                <img src={file4 ? file4 : Blank.src}></img>\r\n              </M.PhotoWrapper>\r\n            </M.PhotoContainer2>\r\n            {master === session?.user?.email && (\r\n              <S.BtnWrapper>\r\n                <S.MailIcon\r\n                  onClick={() => {\r\n                    const result = confirm(\"이 사진을 삭제하시겠습니까?\");\r\n                    if (result === true) {\r\n                      deletePost();\r\n                    } else {\r\n                      return;\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className=\"bi bi-trash\"></i>\r\n                </S.MailIcon>\r\n                <S.MailIcon\r\n                  onClick={() => {\r\n                    const result = confirm(\"이 사진을 다운로드하시겠습니까?\");\r\n                    if (result === true) {\r\n                      onHtmlToPng();\r\n                    } else {\r\n                      return;\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className=\"bi bi-download\"></i>\r\n                </S.MailIcon>\r\n                <S.MailIcon\r\n                  onClick={() => {\r\n                    setModal(true);\r\n                  }}\r\n                >\r\n                  <i className=\"bi bi-envelope-paper\"></i>\r\n                </S.MailIcon>\r\n              </S.BtnWrapper>\r\n            )}\r\n            {modal && (\r\n              <S.LetterModal\r\n                onClick={() => {\r\n                  setModal(false);\r\n                }}\r\n              >\r\n                <p>{letter}</p>\r\n                <p>{author}</p>\r\n              </S.LetterModal>\r\n            )}\r\n          </M.Container>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\frame\\showFrame.tsx",["125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],[],"import { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport * as S from \"styles/components/showframe/frame1/style\";\r\nimport * as T from \"styles/components/frame2/style\";\r\nimport * as M from \"styles/components/frame3/style\";\r\nimport Blank from \"public/img/blank.png\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { frameAtom, colorAtom, pageAtom, modalAtom } from \"atoms/atom\";\r\nexport default function ShowFrame(props: any) {\r\n  const S3 = process.env.NEXT_PUBLIC_S3_URL;\r\n  const [modal, setModal] = useRecoilState(modalAtom);\r\n  const [Bg, setBg] = useState<any>(props.color);\r\n  const [frame, setFrame] = useState<any>(props.frame);\r\n  const [file1, setFile1] = useState<any>(\r\n    process.env.NEXT_PUBLIC_S3_URL + props.file1\r\n  );\r\n  const [file2, setFile2] = useState<any>(\r\n    process.env.NEXT_PUBLIC_S3_URL + props.file2\r\n  );\r\n  const [file3, setFile3] = useState<any>(\r\n    process.env.NEXT_PUBLIC_S3_URL + props.file3\r\n  );\r\n  const [file4, setFile4] = useState<any>(\r\n    process.env.NEXT_PUBLIC_S3_URL + props.file4\r\n  );\r\n  const [letter, setLetter] = useState<any>(props.letter);\r\n  const [author, setAuthor] = useState<any>(props.author);\r\n  const [pk, setPk] = useState<any>(props.id);\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        console.log(\"opendetail\", pk, props.id);\r\n        setModal(pk);\r\n      }}\r\n    >\r\n      {frame === 1 && (\r\n        <div>\r\n          <S.Container color={Bg}>\r\n            <S.PhotoContainer>\r\n              <S.PhotoWrapper>\r\n                <img src={file1 ? file1 : Blank.src}></img>\r\n              </S.PhotoWrapper>\r\n              <S.PhotoWrapper>\r\n                <img src={file2 ? file2 : Blank.src}></img>\r\n              </S.PhotoWrapper>\r\n              <S.PhotoWrapper>\r\n                <img src={file3 ? file3 : Blank.src}></img>\r\n              </S.PhotoWrapper>\r\n              <S.PhotoWrapper>\r\n                <img src={file4 ? file4 : Blank.src}></img>\r\n              </S.PhotoWrapper>\r\n            </S.PhotoContainer>\r\n\r\n            {/* <S.PhotoContainer2>\r\n              <S.PhotoWrapperGrey>\r\n                <img src={file1 ? file1 : Blank.src}></img>\r\n              </S.PhotoWrapperGrey>\r\n              <S.PhotoWrapperGrey>\r\n                <img src={file2 ? file2 : Blank.src}></img>\r\n              </S.PhotoWrapperGrey>\r\n              <S.PhotoWrapperGrey>\r\n                <img src={file3 ? file3 : Blank.src}></img>\r\n              </S.PhotoWrapperGrey>\r\n              <S.PhotoWrapperGrey>\r\n                <img src={file4 ? file4 : Blank.src}></img>\r\n              </S.PhotoWrapperGrey>\r\n            </S.PhotoContainer2> */}\r\n            <S.Author>{author}</S.Author>\r\n          </S.Container>\r\n        </div>\r\n      )}\r\n      {frame === 2 && (\r\n        <div>\r\n          <T.Container color={Bg}>\r\n            <T.PhotoContainer>\r\n              <T.PhotoWrapper>\r\n                <img src={file1 ? file1 : Blank.src}></img>\r\n              </T.PhotoWrapper>\r\n              <T.PhotoWrapper>\r\n                <img src={file2 ? file2 : Blank.src}></img>\r\n              </T.PhotoWrapper>\r\n            </T.PhotoContainer>\r\n            <T.PhotoContainer2>\r\n              <T.PhotoWrapper>\r\n                <img src={file3 ? file3 : Blank.src}></img>\r\n              </T.PhotoWrapper>\r\n              <T.PhotoWrapper>\r\n                <img src={file4 ? file4 : Blank.src}></img>\r\n              </T.PhotoWrapper>\r\n            </T.PhotoContainer2>\r\n            <S.Author>{author}</S.Author>\r\n          </T.Container>\r\n        </div>\r\n      )}\r\n      {frame === 3 && (\r\n        <div>\r\n          <M.Container color={Bg}>\r\n            <M.PhotoContainer>\r\n              <M.PhotoWrapper>\r\n                <img src={file1 ? file1 : Blank.src}></img>\r\n              </M.PhotoWrapper>\r\n              <M.PhotoWrapper>\r\n                <img src={file2 ? file2 : Blank.src}></img>\r\n              </M.PhotoWrapper>\r\n            </M.PhotoContainer>\r\n            <M.PhotoContainer2>\r\n              <M.PhotoWrapper>\r\n                <img src={file3 ? file3 : Blank.src}></img>\r\n              </M.PhotoWrapper>\r\n              <M.PhotoWrapper>\r\n                <img src={file4 ? file4 : Blank.src}></img>\r\n              </M.PhotoWrapper>\r\n            </M.PhotoContainer2>\r\n            <S.Author>{author}</S.Author>\r\n          </M.Container>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\frame\\type1.tsx",["149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],[],"import { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport * as S from \"styles/components/frame1/style\";\r\nimport * as T from \"styles/components/frame2/style\";\r\nimport * as M from \"styles/components/frame3/style\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport { useRouter } from \"next/router\";\r\nimport axios from \"axios\";\r\nimport DefaultImg from \"public/img/upload.png\";\r\nimport DefaultImg2 from \"public/img/upload2.png\";\r\nimport Blank from \"public/img/blank.png\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport {\r\n  frameAtom,\r\n  colorAtom,\r\n  pageAtom,\r\n  file1Atom,\r\n  file2Atom,\r\n  file3Atom,\r\n  file4Atom,\r\n} from \"atoms/atom\";\r\nexport default function Frame1(props: any) {\r\n  const [Bg, setBg] = useRecoilState<any>(colorAtom);\r\n  const [frame, setFrame] = useRecoilState<any>(frameAtom);\r\n  const [file1, setFile1] = useRecoilState<any>(file1Atom);\r\n  const options = {\r\n    maxSizeMB: 0.2, // 이미지 최대 용량\r\n    maxWidthOrHeight: 1920, // 최대 넓이(혹은 높이)\r\n    useWebWorker: true,\r\n  };\r\n  const imageCompress = async (file: any) => {\r\n    try {\r\n      const compressedFile = await imageCompression(file, options);\r\n      const promise = imageCompression.getDataUrlFromFile(compressedFile);\r\n      promise.then((result) => {\r\n        return result;\r\n      });\r\n      //   return compressedFile;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const saveImgFile1 = async () => {\r\n    const file1 = inputRef1.current?.files[0];\r\n    if (file1) {\r\n      const compressedFile = await imageCompression(file1, options);\r\n      const reader = new FileReader();\r\n      console.log(\"file\", file1);\r\n      console.log(\"com\", compressedFile);\r\n      if (compressedFile) {\r\n        reader.readAsDataURL(compressedFile);\r\n        reader.onloadend = () => {\r\n          const base64data = reader.result;\r\n          console.log(\"base64data\", base64data);\r\n          setFile1(base64data);\r\n        };\r\n      }\r\n    }\r\n  };\r\n  const inputRef1 = useRef<any>(null);\r\n  const onUploadImageButtonClick1 = () => {\r\n    inputRef1.current.click();\r\n  };\r\n  // -----------------------\r\n  const [file2, setFile2] = useRecoilState<any>(file2Atom);\r\n  const saveImgFile2 = async () => {\r\n    const file2 = inputRef2.current?.files[0];\r\n    if (file2) {\r\n      const compressedFile = await imageCompression(file2, options);\r\n      const reader = new FileReader();\r\n      console.log(\"file\", file2);\r\n      console.log(\"com\", compressedFile);\r\n      if (compressedFile) {\r\n        reader.readAsDataURL(compressedFile);\r\n        reader.onloadend = () => {\r\n          const base64data = reader.result;\r\n          console.log(\"base64data\", base64data);\r\n          setFile2(base64data);\r\n        };\r\n      }\r\n    }\r\n  };\r\n  const inputRef2 = useRef<any>(null);\r\n  const onUploadImageButtonClick2 = () => {\r\n    inputRef2.current.click();\r\n  };\r\n  // -----------------------\r\n  const [file3, setFile3] = useRecoilState<any>(file3Atom);\r\n  const saveImgFile3 = async () => {\r\n    const file3 = inputRef3.current?.files[0];\r\n    if (file3) {\r\n      const compressedFile = await imageCompression(file3, options);\r\n      const reader = new FileReader();\r\n      console.log(\"file\", file3);\r\n      console.log(\"com\", compressedFile);\r\n      if (compressedFile) {\r\n        reader.readAsDataURL(compressedFile);\r\n        reader.onloadend = () => {\r\n          const base64data = reader.result;\r\n          console.log(\"base64data\", base64data);\r\n          setFile3(base64data);\r\n        };\r\n      }\r\n    }\r\n  };\r\n  const inputRef3 = useRef<any>(null);\r\n  const onUploadImageButtonClick3 = () => {\r\n    inputRef3.current.click();\r\n  };\r\n  // -----------------------\r\n  const [file4, setFile4] = useRecoilState<any>(file4Atom);\r\n  const saveImgFile4 = async () => {\r\n    const file4 = inputRef4.current.files[0];\r\n    if (file4) {\r\n      const compressedFile = await imageCompression(file4, options);\r\n      const reader = new FileReader();\r\n      console.log(\"file\", file4);\r\n      console.log(\"com\", compressedFile);\r\n      if (compressedFile) {\r\n        reader.readAsDataURL(compressedFile);\r\n        reader.onloadend = () => {\r\n          const base64data = reader.result;\r\n          console.log(\"base64data\", base64data);\r\n          setFile4(base64data);\r\n        };\r\n      }\r\n    }\r\n  };\r\n  const inputRef4 = useRef<any>(null);\r\n  const onUploadImageButtonClick4 = () => {\r\n    inputRef4.current.click();\r\n  };\r\n  // -----------------------\r\n\r\n  return (\r\n    <div>\r\n      {frame === 1 && (\r\n        <S.Container color={Bg}>\r\n          <S.PhotoContainer>\r\n            <S.PhotoWrapper>\r\n              <img\r\n                src={file1 ? file1 : DefaultImg.src}\r\n                onClick={onUploadImageButtonClick1}\r\n              ></img>\r\n              <input\r\n                ref={inputRef1}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                onChange={saveImgFile1}\r\n              ></input>\r\n            </S.PhotoWrapper>\r\n            <S.PhotoWrapper>\r\n              <img\r\n                src={file2 ? file2 : DefaultImg.src}\r\n                onClick={onUploadImageButtonClick2}\r\n              ></img>\r\n              <input\r\n                ref={inputRef2}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                onChange={saveImgFile2}\r\n              ></input>\r\n            </S.PhotoWrapper>\r\n            <S.PhotoWrapper>\r\n              <img\r\n                src={file3 ? file3 : DefaultImg.src}\r\n                onClick={onUploadImageButtonClick3}\r\n              ></img>\r\n              <input\r\n                ref={inputRef3}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                onChange={saveImgFile3}\r\n              ></input>\r\n            </S.PhotoWrapper>\r\n            <S.PhotoWrapper>\r\n              <img\r\n                src={file4 ? file4 : DefaultImg.src}\r\n                onClick={onUploadImageButtonClick4}\r\n              ></img>\r\n              <input\r\n                ref={inputRef4}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                onChange={saveImgFile4}\r\n              ></input>\r\n            </S.PhotoWrapper>\r\n          </S.PhotoContainer>\r\n\r\n          <S.PhotoContainer2>\r\n            <S.PhotoWrapperGrey>\r\n              <img src={file1 ? file1 : Blank.src}></img>\r\n            </S.PhotoWrapperGrey>\r\n            <S.PhotoWrapperGrey>\r\n              <img src={file2 ? file2 : Blank.src}></img>\r\n            </S.PhotoWrapperGrey>\r\n            <S.PhotoWrapperGrey>\r\n              <img src={file3 ? file3 : Blank.src}></img>\r\n            </S.PhotoWrapperGrey>\r\n            <S.PhotoWrapperGrey>\r\n              <img src={file4 ? file4 : Blank.src}></img>\r\n            </S.PhotoWrapperGrey>\r\n          </S.PhotoContainer2>\r\n        </S.Container>\r\n      )}\r\n      {frame === 2 && (\r\n        <T.Container color={Bg}>\r\n          <T.PhotoContainer>\r\n            <T.PhotoWrapper>\r\n              <img\r\n                src={file1 ? file1 : DefaultImg2.src}\r\n                onClick={onUploadImageButtonClick1}\r\n              ></img>\r\n              <input\r\n                ref={inputRef1}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                onChange={saveImgFile1}\r\n              ></input>\r\n            </T.PhotoWrapper>\r\n            <T.PhotoWrapper>\r\n              <img\r\n                src={file2 ? file2 : DefaultImg2.src}\r\n                onClick={onUploadImageButtonClick2}\r\n              ></img>\r\n              <input\r\n                ref={inputRef2}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                onChange={saveImgFile2}\r\n              ></input>\r\n            </T.PhotoWrapper>\r\n          </T.PhotoContainer>\r\n          <T.PhotoContainer2>\r\n            <T.PhotoWrapper>\r\n              <img\r\n                src={file3 ? file3 : DefaultImg2.src}\r\n                onClick={onUploadImageButtonClick3}\r\n              ></img>\r\n              <input\r\n                ref={inputRef3}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                onChange={saveImgFile3}\r\n              ></input>\r\n            </T.PhotoWrapper>\r\n            <T.PhotoWrapper>\r\n              <img\r\n                src={file4 ? file4 : DefaultImg2.src}\r\n                onClick={onUploadImageButtonClick4}\r\n              ></img>\r\n              <input\r\n                ref={inputRef4}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                onChange={saveImgFile4}\r\n              ></input>\r\n            </T.PhotoWrapper>\r\n          </T.PhotoContainer2>\r\n        </T.Container>\r\n      )}\r\n      {frame === 3 && (\r\n        <M.Container color={Bg}>\r\n          <M.PhotoContainer>\r\n            <M.PhotoWrapper>\r\n              <img\r\n                src={file1 ? file1 : DefaultImg2.src}\r\n                onClick={onUploadImageButtonClick1}\r\n              ></img>\r\n              <input\r\n                ref={inputRef1}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                onChange={saveImgFile1}\r\n              ></input>\r\n            </M.PhotoWrapper>\r\n            <M.PhotoWrapper>\r\n              <img\r\n                src={file2 ? file2 : DefaultImg2.src}\r\n                onClick={onUploadImageButtonClick2}\r\n              ></img>\r\n              <input\r\n                ref={inputRef2}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                onChange={saveImgFile2}\r\n              ></input>\r\n            </M.PhotoWrapper>\r\n          </M.PhotoContainer>\r\n          <M.PhotoContainer2>\r\n            <M.PhotoWrapper>\r\n              <img\r\n                src={file3 ? file3 : DefaultImg2.src}\r\n                onClick={onUploadImageButtonClick3}\r\n              ></img>\r\n              <input\r\n                ref={inputRef3}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                onChange={saveImgFile3}\r\n              ></input>\r\n            </M.PhotoWrapper>\r\n            <M.PhotoWrapper>\r\n              <img\r\n                src={file4 ? file4 : DefaultImg2.src}\r\n                onClick={onUploadImageButtonClick4}\r\n              ></img>\r\n              <input\r\n                ref={inputRef4}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                onChange={saveImgFile4}\r\n              ></input>\r\n            </M.PhotoWrapper>\r\n          </M.PhotoContainer2>\r\n        </M.Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\header.tsx",[],[],"C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\share.tsx",[],[],"C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\upload\\page1.tsx",[],[],"C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\upload\\page2.tsx",[],[],"C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\components\\upload\\page3.tsx",[],[],"C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\index.tsx",["181","182"],[],"import * as S from \"styles/home/style\";\nimport { signIn, signOut, useSession } from \"next-auth/react\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport intro from \"public/img/intro.png\";\nexport default function Intro() {\n  const router = useRouter();\n  const { data: session, status } = useSession<any>({ required: false });\n  const [browserType, setBrowserType] = useState(\"\");\n  const [isKakaoBrower, setKakaoBrower] = useState(false);\n  const onClickGoogle = () => {\n    if (isKakaoBrower) {\n      alert(\n        \"카카오 인앱 브라우저에서는 구글 로그인이 지원되지 않습니다. 다른 브라우저로 접속해주세요\"\n      );\n    } else {\n      if (status === \"authenticated\") {\n        console.log(session);\n        router.push(\"signup\");\n      } else {\n        signIn(\"google\", { callbackUrl: \"/signup\" });\n      }\n    }\n  };\n  const onClickKakao = () => {\n    if (status === \"authenticated\") {\n      console.log(session);\n      router.push(\"signup\");\n    } else {\n      signIn(\"kakao\", { callbackUrl: \"/signup\" });\n    }\n  };\n\n  useEffect(() => {\n    setBrowserType(navigator.userAgent);\n    const isKakao = navigator.userAgent.match(\"KAKAOTALK\");\n    console.log(navigator.userAgent);\n    // alert(isKakao);\n    setKakaoBrower(Boolean(isKakao));\n  }, []);\n  // console.log(process.env.NEXT_PUBLIC_BASE_URL);\n  return (\n    <S.Container>\n      <S.Content>\n        <S.ImageContainer>\n          <img src={intro.src}></img>\n        </S.ImageContainer>\n\n        <S.ContentContainer>\n          <S.Title>일년네컷</S.Title>\n          <S.SubTitle>너랑 나랑 사진으로 남긴 올해의 추억</S.SubTitle>\n\n          {status === \"authenticated\" && (\n            <div style={{ width: \"100%\" }}>\n              <S.Btn\n                onClick={() => {\n                  router.push(\"signup\");\n                }}\n              >\n                내 앨범 들어가기\n              </S.Btn>\n              <S.Btn onClick={() => signOut()}>로그아웃</S.Btn>\n            </div>\n          )}\n          {status !== \"authenticated\" && (\n            <div style={{ width: \"100%\" }}>\n              <S.Btn onClick={onClickGoogle}>구글로 시작하기</S.Btn>\n              <S.Btn onClick={onClickKakao}>카카오로 시작하기</S.Btn>\n            </div>\n          )}\n\n          {/* {browserType} */}\n          {/* {session && <div>{session?.user?.email}</div>} */}\n          {/* {isKakaoBrower && <div>카카오임</div>}\n        {!isKakaoBrower && <div>카카오 아님</div>} */}\n          {/* {session && <div>{session?.user?.email}</div>} */}\n        </S.ContentContainer>\n      </S.Content>\n\n      <S.FooterContainer>\n        <div>일년네컷</div>\n        <p>멋사 새벽반</p>\n\n        <p>\n          Contact:\n          <br />\n          <i className=\"bi bi-envelope\"></i> 4cuts4memories@gmail.com\n          <br />\n          <i className=\"bi bi-instagram\"></i> 4cuts4memories\n        </p>\n        <p>\n          서비스 관련 기능 이상, 분쟁 및 광고 등 문의 사항은 상기된 이메일로\n          연락주시기 바랍니다\n        </p>\n      </S.FooterContainer>\n    </S.Container>\n  );\n}\n","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\login.tsx",[],[],"C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\signup.tsx",["183"],[],"import { signIn, signOut, useSession } from \"next-auth/react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport * as S from \"styles/signup/style\";\r\nimport { useRouter } from \"next/router\";\r\nimport axios from \"axios\";\r\n// import { useSession } from \"next-auth/react\";\r\nexport default function Signup() {\r\n  const router = useRouter();\r\n  const [err, setErr] = useState(false);\r\n  const [input, setInput] = useState<any>();\r\n  const [loading, setLoading] = useState(true);\r\n  // type Session = {\r\n  //   accessToken: any | string;\r\n  //   idToken: any | string;\r\n  // };\r\n  const { data: session, status } = useSession<any>({ required: false });\r\n\r\n  const userSignUp = () => {\r\n    console.log(\"회원가입\", session);\r\n    if (session?.idToken) {\r\n      axios\r\n        .post(process.env.NEXT_PUBLIC_BASE_URL + \"accounts/google/callback/\", {\r\n          accessToken: session.accessToken,\r\n        })\r\n        .then(function (res) {\r\n          console.log(res);\r\n          if (res.data.status === \"202 UserAlreadyExist\" && res.data.nickname) {\r\n            router.push(res.data.pid);\r\n            // console.log(res.data.pid);\r\n          } else if (\r\n            res.data.status === \"202 UserAlreadyExist\" &&\r\n            !res.data.nickname\r\n          ) {\r\n            setLoading(false);\r\n          } else {\r\n            setLoading(false);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"에러발생\");\r\n          signIn(\"google\", { callbackUrl: \"/signup\" });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(process.env.NEXT_PUBLIC_BASE_URL + \"accounts/kakao/callback/\", {\r\n          accessToken: session?.accessToken,\r\n          email: session?.user?.email,\r\n        })\r\n        .then(function (res) {\r\n          console.log(res);\r\n          if (res.data.status === \"202 UserAlreadyExist\" && res.data.nickname) {\r\n            router.push(res.data.pid);\r\n            // console.log(res.data.pid);\r\n          } else if (\r\n            res.data.status === \"202 UserAlreadyExist\" &&\r\n            !res.data.nickname\r\n          ) {\r\n            setLoading(false);\r\n          } else {\r\n            setLoading(false);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"에러발생\");\r\n          signIn(\"kakao\", { callbackUrl: \"/signup\" });\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  const setNickname = () => {\r\n    console.log(\"닉네임\");\r\n    axios\r\n      .post(process.env.NEXT_PUBLIC_BASE_URL + \"accounts/nickname/change\", {\r\n        email: session?.user?.email,\r\n        nickname: input,\r\n      })\r\n      .then(function (res) {\r\n        console.log(res);\r\n        if (res.data.status === \"201 Updated\") {\r\n          setErr(false);\r\n          router.push(res.data.pid);\r\n        } else if (res.data.status === \"300 Bad Request\") {\r\n          setErr(true);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (status === \"authenticated\") {\r\n      // console.log(\"유저 생성 시작\");\r\n      userSignUp();\r\n    }\r\n  }, [status]);\r\n  if (loading === true) {\r\n    return (\r\n      <S.Container>\r\n        <S.ContentContainer>로딩중...</S.ContentContainer>\r\n      </S.Container>\r\n    );\r\n  } else {\r\n    if (status === \"authenticated\") {\r\n      return (\r\n        <S.Container>\r\n          <S.SubTitle>이름을 정해주세요</S.SubTitle>\r\n          <S.NicknameInput\r\n            type=\"text\"\r\n            onChange={(event) => {\r\n              console.log(event.target.value);\r\n              setInput(event.target.value);\r\n            }}\r\n          ></S.NicknameInput>\r\n          {err && <S.ErrMsg>유효한 이름이 아닙니다</S.ErrMsg>}\r\n          <S.Btn onClick={setNickname}>다음</S.Btn>\r\n        </S.Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          회원가입 중 문제가 발생하였습니다\r\n          <br />\r\n          <button onClick={() => signIn(\"google\")}>Sign in</button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\[pid]\\index.tsx",["184","185","186"],[],"import * as S from \"styles/main/style\";\r\nimport { useState, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { signIn, signOut, useSession } from \"next-auth/react\";\r\nimport { useRouter } from \"next/router\";\r\nimport axios from \"axios\";\r\nimport Header from \"pages/components/header\";\r\nimport Share from \"pages/components/share\";\r\nimport ShowFrame from \"pages/components/frame/showFrame\";\r\nimport DetailFrame from \"pages/components/frame/detailFrame\";\r\nimport intro from \"public/img/intro.png\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { modalAtom } from \"atoms/atom\";\r\n\r\ninterface Props {\r\n  checked?: boolean | undefined;\r\n}\r\nconst HiddenSpanWrapper = styled.div<Props>`\r\n  font-size: 1.2rem;\r\n  right: 0;\r\n  width: 10rem;\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  z-index: 1;\r\n  pointer-events: none;\r\n  & span {\r\n    width: 50%;\r\n    text-align: center;\r\n  }\r\n  & span:first-child {\r\n    color: ${(props) => (props.checked ? \"#707070\" : \"#fff\")};\r\n  }\r\n  & span:last-child {\r\n    color: ${(props) => (props.checked ? \"#fff\" : \"#707070\")};\r\n  }\r\n`;\r\n\r\nexport default function Home() {\r\n  const router = useRouter();\r\n  const { data: session, status } = useSession<any>({ required: false });\r\n  const [boardMaster, setBoardMaster] = useState<any>();\r\n  const [modal, setModal] = useRecoilState(modalAtom);\r\n  const [hidden, setHidden] = useState<boolean>();\r\n  const [boardMasternickname, setBoardMasterNickname] = useState<string>(\"\");\r\n  const [postList, setPostList] = useState<any>([]);\r\n  const [currentUrl, setCurrentUrl] = useState(\"\");\r\n  const blank = \"client_assets/blank.png\";\r\n  const pid = router.query.pid;\r\n  const getBoardMaster = () => {\r\n    axios\r\n      .post(process.env.NEXT_PUBLIC_BASE_URL + \"accounts/nickname/pid\", {\r\n        pid: router.query.pid,\r\n      })\r\n      .then(function (res) {\r\n        setBoardMaster(res.data.email);\r\n        setHidden(res.data.hidden);\r\n        setBoardMasterNickname(res.data.nickname);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const getPostList = () => {\r\n    axios\r\n      .post(process.env.NEXT_PUBLIC_BASE_URL + \"posts/givePosts\", {\r\n        pid: router.query.pid,\r\n      })\r\n      .then(function (res) {\r\n        console.log(res);\r\n        setPostList(res.data.posts);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const changeHiddenState = () => {\r\n    axios\r\n      .post(process.env.NEXT_PUBLIC_BASE_URL + \"accounts/hidden/change\", {\r\n        email: session?.user?.email,\r\n      })\r\n      .then(function (res) {\r\n        console.log(res);\r\n        if (res.data.status === \"201 Updated\") {\r\n          setHidden(res.data.hiddenAfter);\r\n        } else {\r\n          alert(\"공개 상태를 바꾸는 데 실패했습니다. 다시 시도해주세요.\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (pid) {\r\n      getBoardMaster();\r\n      getPostList();\r\n    }\r\n    setCurrentUrl(window.location.href);\r\n  }, [pid]);\r\n  const onClickEnter = () => {\r\n    if (status === \"authenticated\") {\r\n      console.log(session);\r\n      router.push(\"signup\");\r\n    } else {\r\n      signIn(\"google\", { callbackUrl: \"/signup\" });\r\n    }\r\n  };\r\n  // console.log(postList[0].title);\r\n  return (\r\n    <S.Container>\r\n      {modal === \"share\" && (\r\n        <div>\r\n          <S.ModalBg\r\n            onClick={() => {\r\n              setModal(false);\r\n            }}\r\n          ></S.ModalBg>\r\n          <S.ModalContainer>\r\n            <S.ModalInfoContainer>\r\n              <div></div>\r\n              <p>공유하기</p>\r\n              <div\r\n                onClick={() => {\r\n                  setModal(false);\r\n                }}\r\n              >\r\n                X\r\n              </div>\r\n            </S.ModalInfoContainer>\r\n            <Share currentUrl={currentUrl}></Share>\r\n          </S.ModalContainer>\r\n        </div>\r\n      )}\r\n      <Header name={boardMasternickname} page=\"main\"></Header>\r\n      {session?.user?.email !== boardMaster && (\r\n        <S.SubTitle>앨범 주인과 함께한 올해의 추억을 공유해주세요</S.SubTitle>\r\n      )}\r\n      {session?.user?.email === boardMaster && (\r\n        <S.SubTitle>올해의 추억을 공유해주세요</S.SubTitle>\r\n      )}\r\n\r\n      <S.ControlContainer>\r\n        <S.Btn\r\n          color=\"#FF7575\"\r\n          onClick={() => {\r\n            router.push(pid + \"/upload\");\r\n          }}\r\n        >\r\n          <img src={intro.src} />\r\n          사진 올리기\r\n        </S.Btn>\r\n        {session?.user?.email === boardMaster && (\r\n          <S.SetHiddenConatainer>\r\n            <S.SetHiddenBtn onClick={changeHiddenState}>\r\n              <div>내 앨범 </div>\r\n              <HiddenSpanWrapper checked={hidden}>\r\n                <span>공개</span> <span>비공개</span>\r\n              </HiddenSpanWrapper>\r\n              <input\r\n                role=\"switch\"\r\n                type=\"checkbox\"\r\n                checked={hidden}\r\n                readOnly\r\n              ></input>\r\n            </S.SetHiddenBtn>\r\n          </S.SetHiddenConatainer>\r\n        )}\r\n\r\n        {session?.user?.email !== boardMaster && (\r\n          <S.BtnWrapper>\r\n            <S.SubBtn1 color=\"#FFD275\" onClick={onClickEnter}>\r\n              내 앨범으로\r\n            </S.SubBtn1>\r\n            <S.SubBtn2\r\n              color=\"white\"\r\n              onClick={() => {\r\n                router.push(\"/\");\r\n              }}\r\n            >\r\n              처음으로\r\n            </S.SubBtn2>\r\n          </S.BtnWrapper>\r\n        )}\r\n\r\n        {postList.length > 0 && session?.user?.email === boardMaster && (\r\n          <div style={{ width: \"100%\", marginBottom: \"8rem\" }}>\r\n            <S.PostListInfo>\r\n              좌우로 밀어서 친구들이 남긴 사진을 확인해보세요!\r\n            </S.PostListInfo>\r\n            <S.PostListContainer>\r\n              {postList.map((post: any, idx: number) => (\r\n                <S.FrameBox key={post.post_pk} id={post.frame}>\r\n                  <ShowFrame\r\n                    color={post.color}\r\n                    frame={post.frame}\r\n                    file1={post.images.image1}\r\n                    file2={post.images.image2}\r\n                    file3={post.images.image3}\r\n                    file4={post.images.image4}\r\n                    letter={post.letter}\r\n                    author={post.title}\r\n                    key={post.post_pk}\r\n                    id={post.post_pk}\r\n                  ></ShowFrame>\r\n                  {modal === post.post_pk && (\r\n                    <div style={{ zIndex: \"3\" }}>\r\n                      <S.ModalBg\r\n                        onClick={() => {\r\n                          setModal(false);\r\n                        }}\r\n                      ></S.ModalBg>\r\n                      <S.ModalPostContainer>\r\n                        <S.ModalInfoContainer>\r\n                          <div></div>\r\n                          <p style={{ color: \"white\" }}>\r\n                            {post.title}님의 사진\r\n                          </p>\r\n                          <div\r\n                            style={{ color: \"white\" }}\r\n                            onClick={() => {\r\n                              setModal(false);\r\n                            }}\r\n                          >\r\n                            X\r\n                          </div>\r\n                        </S.ModalInfoContainer>\r\n                        <S.ModalPostWrapper>\r\n                          <DetailFrame\r\n                            color={post.color}\r\n                            frame={post.frame}\r\n                            file1={post.images.image1}\r\n                            file2={post.images.image2}\r\n                            file3={post.images.image3}\r\n                            file4={post.images.image4}\r\n                            letter={post.letter}\r\n                            author={post.title}\r\n                            id={post.post_pk}\r\n                            master={boardMaster}\r\n                          ></DetailFrame>\r\n                        </S.ModalPostWrapper>\r\n                        {/* <S.ModalInfoContainer> */}\r\n                        <div\r\n                          style={{\r\n                            color: \"white\",\r\n                            fontSize: \"1.6rem\",\r\n                            textAlign: \"center\",\r\n                            marginTop: \"1rem\",\r\n                          }}\r\n                        >\r\n                          쪽지 아이콘을 클릭해서 메시지를 확인해보세요\r\n                        </div>\r\n                        {/* </S.ModalInfoContainer> */}\r\n                      </S.ModalPostContainer>\r\n                    </div>\r\n                  )}\r\n                </S.FrameBox>\r\n              ))}\r\n            </S.PostListContainer>\r\n          </div>\r\n        )}\r\n        {postList.length > 0 &&\r\n          session?.user?.email !== boardMaster &&\r\n          !hidden && (\r\n            <div style={{ width: \"100%\", marginBottom: \"8rem\" }}>\r\n              <S.PostListInfo>\r\n                좌우로 밀어서 {boardMasternickname}님의 사진을 확인해보세요!\r\n              </S.PostListInfo>\r\n              <S.PostListContainer>\r\n                {postList.map((post: any, idx: number) => (\r\n                  <S.FrameBox key={post.post_pk} id={post.frame}>\r\n                    <ShowFrame\r\n                      color={post.color}\r\n                      frame={post.frame}\r\n                      file1={post.images.image1}\r\n                      file2={post.images.image2}\r\n                      file3={post.images.image3}\r\n                      file4={post.images.image4}\r\n                      letter={post.letter}\r\n                      author={post.title}\r\n                      key={post.post_pk}\r\n                      id={post.post_pk}\r\n                    ></ShowFrame>\r\n                    {modal === post.post_pk && (\r\n                      <div style={{ zIndex: \"3\" }}>\r\n                        <S.ModalBg\r\n                          onClick={() => {\r\n                            setModal(false);\r\n                          }}\r\n                        ></S.ModalBg>\r\n                        <S.ModalPostContainer>\r\n                          <S.ModalInfoContainer>\r\n                            <div></div>\r\n                            <p style={{ color: \"white\" }}>\r\n                              {post.title}님의 사진\r\n                            </p>\r\n                            <div\r\n                              style={{ color: \"white\" }}\r\n                              onClick={() => {\r\n                                setModal(false);\r\n                              }}\r\n                            >\r\n                              X\r\n                            </div>\r\n                          </S.ModalInfoContainer>\r\n                          <S.ModalPostWrapper>\r\n                            <DetailFrame\r\n                              color={post.color}\r\n                              frame={post.frame}\r\n                              file1={post.images.image1}\r\n                              file2={post.images.image2}\r\n                              file3={post.images.image3}\r\n                              file4={post.images.image4}\r\n                              letter={post.letter}\r\n                              author={post.title}\r\n                              key={post.post_pk}\r\n                              id={post.post_pk}\r\n                              master={boardMaster}\r\n                            ></DetailFrame>\r\n                          </S.ModalPostWrapper>\r\n                        </S.ModalPostContainer>\r\n                      </div>\r\n                    )}\r\n                  </S.FrameBox>\r\n                ))}\r\n              </S.PostListContainer>\r\n            </div>\r\n          )}\r\n        {postList.length > 0 &&\r\n          session?.user?.email !== boardMaster &&\r\n          hidden && (\r\n            <div style={{ width: \"100%\", marginBottom: \"8rem\" }}>\r\n              <S.PostListInfo>\r\n                {boardMasternickname}님의 앨범은 비공개 상태입니다!\r\n              </S.PostListInfo>\r\n              <S.PostListContainer>\r\n                {postList.map((post: any, idx: number) => (\r\n                  <S.FrameBox key={post.post_pk} id={post.frame}>\r\n                    <ShowFrame\r\n                      color={post.color}\r\n                      frame={post.frame}\r\n                      file1={blank}\r\n                      file2={blank}\r\n                      file3={blank}\r\n                      file4={blank}\r\n                      letter={post.letter}\r\n                      author={post.title}\r\n                      key={post.post_pk}\r\n                      id={post.post_pk}\r\n                    ></ShowFrame>\r\n                  </S.FrameBox>\r\n                ))}\r\n              </S.PostListContainer>\r\n            </div>\r\n          )}\r\n        {postList.length === 0 && (\r\n          <S.NoPostContainer>\r\n            <S.NoPostInfo>\r\n              아직 사진이 없어요 ㅠㅠ\r\n              <br />\r\n              링크를 공유해서 친구들과 추억을 나눠보세요!\r\n              <Share currentUrl={currentUrl}></Share>\r\n            </S.NoPostInfo>\r\n          </S.NoPostContainer>\r\n        )}\r\n      </S.ControlContainer>\r\n    </S.Container>\r\n  );\r\n}\r\n","C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\[pid]\\upload.tsx",[],[],"C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\_app.tsx",[],[],"C:\\Users\\KJS\\Desktop\\Project\\yearfourcuts\\frontend\\frontend\\pages\\_document.tsx",[],[],{"ruleId":"187","severity":1,"message":"188","line":86,"column":17,"nodeType":"189","endLine":89,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":86,"column":17,"nodeType":"189","endLine":89,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":92,"column":17,"nodeType":"189","endLine":95,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":92,"column":17,"nodeType":"189","endLine":95,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":98,"column":17,"nodeType":"189","endLine":101,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":98,"column":17,"nodeType":"189","endLine":101,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":104,"column":17,"nodeType":"189","endLine":107,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":104,"column":17,"nodeType":"189","endLine":107,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":113,"column":17,"nodeType":"189","endLine":116,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":113,"column":17,"nodeType":"189","endLine":116,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":119,"column":17,"nodeType":"189","endLine":122,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":119,"column":17,"nodeType":"189","endLine":122,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":125,"column":17,"nodeType":"189","endLine":128,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":125,"column":17,"nodeType":"189","endLine":128,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":131,"column":17,"nodeType":"189","endLine":134,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":131,"column":17,"nodeType":"189","endLine":134,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":191,"column":17,"nodeType":"189","endLine":191,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":191,"column":17,"nodeType":"189","endLine":191,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":194,"column":17,"nodeType":"189","endLine":194,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":194,"column":17,"nodeType":"189","endLine":194,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":199,"column":17,"nodeType":"189","endLine":199,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":199,"column":17,"nodeType":"189","endLine":199,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":202,"column":17,"nodeType":"189","endLine":202,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":202,"column":17,"nodeType":"189","endLine":202,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":258,"column":17,"nodeType":"189","endLine":258,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":258,"column":17,"nodeType":"189","endLine":258,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":261,"column":17,"nodeType":"189","endLine":261,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":261,"column":17,"nodeType":"189","endLine":261,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":266,"column":17,"nodeType":"189","endLine":266,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":266,"column":17,"nodeType":"189","endLine":266,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":269,"column":17,"nodeType":"189","endLine":269,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":269,"column":17,"nodeType":"189","endLine":269,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":40,"column":17,"nodeType":"189","endLine":40,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":40,"column":17,"nodeType":"189","endLine":40,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":43,"column":17,"nodeType":"189","endLine":43,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":43,"column":17,"nodeType":"189","endLine":43,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":46,"column":17,"nodeType":"189","endLine":46,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":46,"column":17,"nodeType":"189","endLine":46,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":49,"column":17,"nodeType":"189","endLine":49,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":49,"column":17,"nodeType":"189","endLine":49,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":76,"column":17,"nodeType":"189","endLine":76,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":76,"column":17,"nodeType":"189","endLine":76,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":79,"column":17,"nodeType":"189","endLine":79,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":79,"column":17,"nodeType":"189","endLine":79,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":84,"column":17,"nodeType":"189","endLine":84,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":84,"column":17,"nodeType":"189","endLine":84,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":87,"column":17,"nodeType":"189","endLine":87,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":87,"column":17,"nodeType":"189","endLine":87,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":99,"column":17,"nodeType":"189","endLine":99,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":99,"column":17,"nodeType":"189","endLine":99,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":102,"column":17,"nodeType":"189","endLine":102,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":102,"column":17,"nodeType":"189","endLine":102,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":107,"column":17,"nodeType":"189","endLine":107,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":107,"column":17,"nodeType":"189","endLine":107,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":110,"column":17,"nodeType":"189","endLine":110,"endColumn":54},{"ruleId":"190","severity":1,"message":"191","line":110,"column":17,"nodeType":"189","endLine":110,"endColumn":54},{"ruleId":"187","severity":1,"message":"188","line":140,"column":15,"nodeType":"189","endLine":143,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":140,"column":15,"nodeType":"189","endLine":143,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":152,"column":15,"nodeType":"189","endLine":155,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":152,"column":15,"nodeType":"189","endLine":155,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":164,"column":15,"nodeType":"189","endLine":167,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":164,"column":15,"nodeType":"189","endLine":167,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":176,"column":15,"nodeType":"189","endLine":179,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":176,"column":15,"nodeType":"189","endLine":179,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":191,"column":15,"nodeType":"189","endLine":191,"endColumn":52},{"ruleId":"190","severity":1,"message":"191","line":191,"column":15,"nodeType":"189","endLine":191,"endColumn":52},{"ruleId":"187","severity":1,"message":"188","line":194,"column":15,"nodeType":"189","endLine":194,"endColumn":52},{"ruleId":"190","severity":1,"message":"191","line":194,"column":15,"nodeType":"189","endLine":194,"endColumn":52},{"ruleId":"187","severity":1,"message":"188","line":197,"column":15,"nodeType":"189","endLine":197,"endColumn":52},{"ruleId":"190","severity":1,"message":"191","line":197,"column":15,"nodeType":"189","endLine":197,"endColumn":52},{"ruleId":"187","severity":1,"message":"188","line":200,"column":15,"nodeType":"189","endLine":200,"endColumn":52},{"ruleId":"190","severity":1,"message":"191","line":200,"column":15,"nodeType":"189","endLine":200,"endColumn":52},{"ruleId":"187","severity":1,"message":"188","line":209,"column":15,"nodeType":"189","endLine":212,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":209,"column":15,"nodeType":"189","endLine":212,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":221,"column":15,"nodeType":"189","endLine":224,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":221,"column":15,"nodeType":"189","endLine":224,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":235,"column":15,"nodeType":"189","endLine":238,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":235,"column":15,"nodeType":"189","endLine":238,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":247,"column":15,"nodeType":"189","endLine":250,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":247,"column":15,"nodeType":"189","endLine":250,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":265,"column":15,"nodeType":"189","endLine":268,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":265,"column":15,"nodeType":"189","endLine":268,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":277,"column":15,"nodeType":"189","endLine":280,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":277,"column":15,"nodeType":"189","endLine":280,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":291,"column":15,"nodeType":"189","endLine":294,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":291,"column":15,"nodeType":"189","endLine":294,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":303,"column":15,"nodeType":"189","endLine":306,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":303,"column":15,"nodeType":"189","endLine":306,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":47,"column":11,"nodeType":"189","endLine":47,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":47,"column":11,"nodeType":"189","endLine":47,"endColumn":32},{"ruleId":"192","severity":1,"message":"193","line":96,"column":6,"nodeType":"194","endLine":96,"endColumn":14,"suggestions":"195"},{"ruleId":"192","severity":1,"message":"196","line":101,"column":6,"nodeType":"194","endLine":101,"endColumn":11,"suggestions":"197"},{"ruleId":"187","severity":1,"message":"188","line":151,"column":11,"nodeType":"189","endLine":151,"endColumn":34},{"ruleId":"190","severity":1,"message":"191","line":151,"column":11,"nodeType":"189","endLine":151,"endColumn":34},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Use `<Image />` from `next/image` instead to utilize Image Optimization. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userSignUp'. Either include it or remove the dependency array.","ArrayExpression",["198"],"React Hook useEffect has missing dependencies: 'getBoardMaster' and 'getPostList'. Either include them or remove the dependency array.",["199"],{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [status, userSignUp]",{"range":"204","text":"205"},"Update the dependencies array to be: [getBoardMaster, getPostList, pid]",{"range":"206","text":"207"},[3082,3090],"[status, userSignUp]",[3106,3111],"[getBoardMaster, getPostList, pid]"]